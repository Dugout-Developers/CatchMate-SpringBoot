name: Spring Boot & Gradle CI/CD

on:
  push:
    branches:
      - develop
      - master

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.yml
        run: |
          cd ./src/main/resources
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "${{ secrets.APPLICATION_DEV_YML }}" > application-dev.yml
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "${{ secrets.APPLICATION_PROD_YML }}" > application-prod.yml
          fi
        shell: bash

      - name: Create Firebase Config Directory
        run: |
          mkdir -p src/main/resources/firebase
          echo "${{ secrets.FIREBASE_SERVICE_KEY }}" | base64 --decode > src/main/resources/firebase/firebase-key.json
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle (without Test)
        run: ./gradlew clean build -x test --stacktrace

      - name: Docker Hub build & push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_DEV_REPO }} .
            docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_DEV_REPO }}
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_PROD_REPO }} .
            docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_PROD_REPO }}
          fi

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ github.ref == 'refs/heads/develop' && secrets.EC2_DEV_HOST || secrets.EC2_PROD_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ github.ref == 'refs/heads/develop' && secrets.EC2_DEV_PRIVATE_KEY || secrets.EC2_PROD_PRIVATE_KEY }}
          script: |
            set -e
            cd /home/ubuntu/CatchMate-SpringBoot
            echo "Logging in to Docker..."
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            echo "Stopping existing containers..."
            sudo docker compose down || true

            echo "Pulling latest image..."
            if [ "${GITHUB_REF##*/}" = "develop" ]; then
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_DEV_REPO }}
            else
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_PROD_REPO }}
            fi

            echo "Starting containers..."
            sudo docker compose up -d --build

            echo "Cleaning up old images..."
            sudo docker image prune -f
