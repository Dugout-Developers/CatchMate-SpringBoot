plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.8'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.back'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    implementation('io.jsonwebtoken:jjwt-api:0.11.2')
    runtimeOnly('io.jsonwebtoken:jjwt-impl:0.11.2')
    runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.11.2')

    // Validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'

    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

//tasks.named('test') {
//    useJUnitPlatform()
//}
